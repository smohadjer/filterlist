function u(l){var e=decodeURIComponent(window.location.search.substring(1)),t=e.split("&"),i,s;for(s=0;s<t.length;s++)if(i=t[s].split("="),i[0]===l)return i[1]===void 0?!0:i[1]}function h(l,e,t){var i=new RegExp("([?&])"+e+"=.*?(&|$)","i"),s=l.indexOf("?")!==-1?"&":"?";return l.match(i)?l.replace(i,"$1"+e+"="+t+"$2"):l+s+e+"="+t}function f(l,e){var t=l.split("?");if(t.length>=2){for(var i=encodeURIComponent(e)+"=",s=t[1].split(/[&;]/g),a=s.length;a-- >0;)s[a].lastIndexOf(i,0)!==-1&&s.splice(a,1);return l=t[0]+(s.length>0?"?"+s.join("&"):""),l}else return l}var n=class{constructor(e){this.urlIsUpdatable=e.urlIsUpdatable===void 0?!1:e.urlIsUpdatable,this.element=e.element,this.filters=[],this.filterNames=this.element.getAttribute("data-filter-names").split(" "),this.initCallback=e.initCallback,this.filtersCallback=e.filtersCallback,this.url=window.location.href,this.lastClass=e.lastClass||"last",this.hiddenClass=e.hiddenClass||"hidden",this.excludeClass=e.excludeFromFilteringClass||"filterList__exclude",this.filterSelector=e.filterSelector,this.setEventHandlers(),this.setDefaultFilters(this.filterNames),this.updateFiltersfromURL(),this.updateBrowserHistory(),typeof this.initCallback=="function"&&this.initCallback(),this.applyFilters()}updateBrowserHistory(){if(this.urlIsUpdatable&&window.history&&window.history.pushState){let e={};e.filters=this.filters.slice(),history.replaceState(e,document.title,this.url)}}setDefaultFilters(e){e.forEach(t=>{let i=this.getFilterIgnoreValue(t),s=this.getFilterValue(t);this.filters.push({name:t,value:s,ignoreValue:i})})}getFilterIgnoreValue(e){let t=document.querySelector(`[name="${e}"]`),i;return t?t.tagName==="SELECT"&&(i=t.getAttribute("data-ignore")):console.warn("No filter with name "+e+" was found in markup!"),i}getFilterValue(e){let t=document.querySelector(`[name="${e}"]`),i;return t?t.getAttribute("type")==="checkbox"?i=t.checked?t.value:void 0:i=t.value:console.warn("No filter with name "+e+" was found in markup!"),i}updateFiltersfromURL(){this.filterNames.forEach(e=>{let t=u(e);t&&this.updateFilters({name:e,value:t},!0)})}updateFilters(e,t){let i=this.filters.find(s=>s.name===e.name);i&&i.value!==e.value&&(i.value=e.value,this.applyFilters(),t&&this.updateDOM([i]))}setEventHandlers(){this.filterNames.forEach(e=>{let t=document.querySelector('[name="'+e+'"]');t&&t.addEventListener("change",()=>{this.updateFilters({name:e,value:this.getFilterValue(e)}),this.urlIsUpdatable&&this.updateURL()})}),this.urlIsUpdatable&&window.history&&window.history.pushState&&window.addEventListener("popstate",e=>{if(e.state.filters){for(let t in e.state.filters)this.filters[t]=e.state.filters[t];this.updateDOM(e.state.filters),this.applyFilters()}})}updateDOM(e){for(let t in e){let i=e[t],s=document.querySelector(`[name="${i.name}"]`);s&&(s.tagName==="SELECT"&&(s.value=i.value),s.tagName==="INPUT"&&s.getAttribute("type")==="checkbox"&&(s.checked=s.value===i.value))}}setFilters(e){for(let t in e)this.filters.forEach(function(i){i.name===t&&(i.value=e[t])});this.updateDOM(this.filters),this.applyFilters(),this.urlIsUpdatable&&this.updateURL()}applyFilters(){let e=[],t,i=[];this.filterSelector?t=this.element.querySelectorAll(this.filterSelector):t=this.element.children;for(let s of t)s.classList.contains(this.excludeClass)||i.push(s);if(this.lastClass){let s=this.element.querySelector(`.${this.lastClass}`);s&&s.classList.remove(this.lastClass)}[...i].forEach(s=>{let a=!0;this.filters.forEach(function(r){if(r.value!==void 0&&r.value!==r.ignoreValue&&(!s.hasAttribute("data-filter-"+r.name)||s.getAttribute("data-filter-"+r.name)!==r.value))return a=!1,!1}),a&&e.push(s)}),[...i].forEach(s=>{s.classList.add(this.hiddenClass)}),e.length!==0?(e.forEach((s,a)=>{s.classList.remove(this.hiddenClass),this.lastClass&&a===e.length-1&&s.classList.add(this.lastClass)}),this.element.classList.remove("is-empty")):this.element.classList.add("is-empty"),typeof this.filtersCallback=="function"&&this.filtersCallback()}updateURL(){if(window.history&&window.history.pushState){let e={};e.filters=Object.assign({},this.filters),this.filters.forEach(t=>{t.value!==void 0&&t.value.length!==0&&t.value!==t.ignoreValue?this.url=h(this.url,t.name,t.value):this.url=f(this.url,t.name)}),history.pushState(e,document.title,this.url)}}};export{n as default};
//# sourceMappingURL=filterList.min.js.map
