{
  "version": 3,
  "sources": ["../src/utils.js", "../src/filterList.js"],
  "sourcesContent": ["export function getUrlParameter(sParam) {\n\tvar sPageURL = decodeURIComponent(window.location.search.substring(1)),\n\t\tsURLVariables = sPageURL.split('&'),\n\t\tsParameterName,\n\t\ti;\n\n\tfor (i = 0; i < sURLVariables.length; i++) {\n\t\tsParameterName = sURLVariables[i].split('=');\n\n\t\tif (sParameterName[0] === sParam) {\n\t\t\treturn sParameterName[1] === undefined ? true : sParameterName[1];\n\t\t}\n\t}\n}\n\nexport function updateQueryStringParameter(uri, key, value) {\n\tvar re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n\tvar separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n\n\tif (uri.match(re)) {\n\t\treturn uri.replace(re, '$1' + key + \"=\" + value + '$2');\n\t} else {\n\t\treturn uri + separator + key + \"=\" + value;\n\t}\n}\n\nexport function removeURLParameter(url, parameter) {\n    //prefer to use l.search if you have a location/link object\n    var urlparts= url.split('?');\n    if (urlparts.length >= 2) {\n        var prefix= encodeURIComponent(parameter)+'=';\n        var pars= urlparts[1].split(/[&;]/g);\n\n        //reverse iteration as may be destructive\n        for (var i= pars.length; i-- > 0;) {\n            //idiom for string.startsWith\n            if (pars[i].lastIndexOf(prefix, 0) !== -1) {\n                pars.splice(i, 1);\n            }\n        }\n\n        url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\");\n        return url;\n    } else {\n        return url;\n    }\n}\n", "/*\n * @name          filterList.js\n * @version       3.1.0\n * @lastmodified  2018-02-06\n * @author        Saeid Mohadjer\n * @repo\t\t  https://github.com/smohadjer/filterList\n *\n * Licensed under the MIT License\n */\n\nimport * as utils from './utils.js';\n\n'use strict';\n\nexport default class FilterList {\n\tconstructor(options) {\n\t\tthis.urlIsUpdatable = (options.urlIsUpdatable === undefined) ? false : options.urlIsUpdatable;\n\t\tthis.element = options.element;\n\t\tthis.filters = [];\n\t\tthis.filterNames = this.element.getAttribute('data-filter-names').split(' ');\n\t\tthis.initCallback = options.initCallback;\n\t\tthis.filtersCallback = options.filtersCallback;\n\t\tthis.url = window.location.href;\n\t\tthis.lastClass = options.lastClass || 'last';\n\t\tthis.hiddenClass = options.hiddenClass || 'hidden';\n\t\tthis.excludeClass = options.excludeFromFilteringClass || 'filterList__exclude';\n\t\tthis.filterSelector = options.filterSelector;\n\n\t\tthis.setEventHandlers();\n\t\tthis.setDefaultFilters(this.filterNames);\n\t\tthis.updateFiltersfromURL();\n\t\tthis.updateBrowserHistory();\n\n\t\tif (typeof this.initCallback === 'function') {\n\t\t\tthis.initCallback();\n\t\t}\n\n\t\tthis.applyFilters();\n\t}\n\n\tupdateBrowserHistory() {\n\t\tif (this.urlIsUpdatable && window.history && window.history.pushState) {\n\t\t\tlet state = {};\n\t\t\tstate.filters = this.filters.slice();\n\t\t\thistory.replaceState(state, document.title, this.url);\n\t\t}\n\t}\n\n\tsetDefaultFilters(filterNames) {\n\t\tfilterNames.forEach((filterName) => {\n\t\t\tconst ignoreValue = this.getFilterIgnoreValue(filterName);\n\t\t\tconst filterValue = this.getFilterValue(filterName);\n\n\t\t\tthis.filters.push({\n\t\t\t\tname: filterName,\n\t\t\t\tvalue: filterValue,\n\t\t\t\tignoreValue: ignoreValue\n\t\t\t});\n\t\t});\n\t}\n\n\tgetFilterIgnoreValue(filterName) {\n\t\tconst filterElement = document.querySelector(`[name=\"${filterName}\"]`);\n\t\tlet ignoreValue;\n\n\t\tif (filterElement) {\n\t\t\tif (filterElement.tagName === 'SELECT') {\n\t\t\t\tignoreValue = filterElement.getAttribute('data-ignore');\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn('No filter with name ' + filterName + ' was found in markup!');\n\t\t}\n\n\t\treturn ignoreValue;\n\t}\n\n\tgetFilterValue(filterName) {\n\t\tconst filterElement = document.querySelector(`[name=\"${filterName}\"]`);\n\t\tlet filterValue;\n\n\t\tif (filterElement) {\n\t\t\tif (filterElement.getAttribute('type') === 'checkbox') {\n\t\t\t\tfilterValue = filterElement.checked ? filterElement.value : undefined;\n\t\t\t} else {\n\t\t\t\tfilterValue = filterElement.value;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn('No filter with name ' + filterName + ' was found in markup!');\n\t\t}\n\n\t\treturn filterValue;\n\t}\n\n\tupdateFiltersfromURL() {\n\t\tthis.filterNames.forEach((filterName) => {\n\t\t\tconst newValue = utils.getUrlParameter(filterName);\n\n\t\t\tif (newValue) {\n\t\t\t\tthis.updateFilters({\n\t\t\t\t\tname: filterName,\n\t\t\t\t\tvalue: newValue\n\t\t\t\t}, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateFilters(updatedFilter, triggerEvent) {\n\t\tlet filter = this.filters.find((filter) => filter.name === updatedFilter.name);\n\n\t\tif (filter && filter.value !== updatedFilter.value) {\n\t\t\tfilter.value = updatedFilter.value;\n\t\t\tthis.applyFilters();\n\n\t\t\tif (triggerEvent) {\n\t\t\t\tthis.updateDOM([filter]);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetEventHandlers() {\n\t\tthis.filterNames.forEach((filterName) => {\n\t\t\tconst filterElement = document.querySelector('[name=\"' + filterName + '\"]');\n\n\t\t\tif (filterElement) {\n\t\t\t\tfilterElement.addEventListener('change', () => {\n\t\t\t\t\tthis.updateFilters({\n\t\t\t\t\t\tname: filterName,\n\t\t\t\t\t\tvalue: this.getFilterValue(filterName)\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.urlIsUpdatable) {\n\t\t\t\t\t\tthis.updateURL();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (this.urlIsUpdatable && window.history && window.history.pushState) {\n\t\t\twindow.addEventListener(\"popstate\", (e) => {\n\t\t\t\tif (e.state.filters) {\n\t\t\t\t\tfor (let prop in e.state.filters) {\n\t\t\t\t\t\tthis.filters[prop] = e.state.filters[prop];\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.updateDOM(e.state.filters);\n\t\t\t\t\tthis.applyFilters();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tupdateDOM(filtersArray) {\n\t\tfor (let i in filtersArray) {\n\t\t\tlet filter = filtersArray[i];\n\t\t\tlet filterElement = document.querySelector(`[name=\"${filter.name}\"]`);\n\n\t\t\tif (filterElement) {\n\t\t\t\tif (filterElement.tagName === 'SELECT') {\n\t\t\t\t\tfilterElement.value = filter.value;\n\t\t\t\t}\n\n\t\t\t\tif (filterElement.tagName === 'INPUT') {\n\t\t\t\t\tif (filterElement.getAttribute('type') === 'checkbox') {\n\t\t\t\t\t\tfilterElement.checked = (filterElement.value === filter.value) ? true : false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//public method for changing filters\n\tsetFilters(filters) {\n\t\tfor (let property in filters) {\n\t\t\tthis.filters.forEach(function(item) {\n\t\t\t\tif (item.name === property) {\n\t\t\t\t\titem.value = filters[property];\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.updateDOM(this.filters);\n\t\tthis.applyFilters();\n\n\t\tif (this.urlIsUpdatable) {\n\t\t\tthis.updateURL();\n\t\t}\n\t}\n\n\tapplyFilters() {\n\t\tlet matchedItems = [];\n\t\tlet listItems;\n\t\tlet newListItems = [];\n\n\t\tif (this.filterSelector) {\n\t\t\tlistItems = this.element.querySelectorAll(this.filterSelector);\n\t\t} else {\n\t\t\tlistItems = this.element.children;\n\t\t}\n\n\t\t//exclude items that shouldn't be filtered\n\t\tfor (let item of listItems) {\n\t\t\tif (!item.classList.contains(this.excludeClass)) {\n\t\t\t\tnewListItems.push(item);\n\t\t\t}\n\t\t}\n\n\t\tif (this.lastClass) {\n\t\t\tlet lastVisibleElement = this.element.querySelector(`.${this.lastClass}`);\n\t\t\tif (lastVisibleElement) {\n\t\t\t\tlastVisibleElement.classList.remove(this.lastClass);\n\t\t\t}\n\t\t}\n\n\t\t// If filters are set, only items whose data attributes\n\t\t//match all the set filters would show\n\t\t[...newListItems].forEach((element) => {\n\t\t\tlet matched = true;\n\n\t\t\tthis.filters.forEach(function(filter) {\n\t\t\t\tif (filter.value !== undefined && filter.value !== filter.ignoreValue) {\n\t\t\t\t\t//any list item that doesn't have attribute for this filter or\n\t\t\t\t\t//has attribute for this filter with another value should\n\t\t\t\t\t//be filtered out.\n\t\t\t\t\tif (!element.hasAttribute('data-filter-' + filter.name) || element.getAttribute('data-filter-' + filter.name) !== filter.value) {\n\t\t\t\t\t\tmatched = false;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (matched) {\n\t\t\t\tmatchedItems.push(element);\n\t\t\t}\n\t\t});\n\n\t\t[...newListItems].forEach((el) => {\n\t\t\tel.classList.add(this.hiddenClass);\n\t\t});\n\n\t\tif (matchedItems.length !== 0) {\n\t\t\tmatchedItems.forEach((item, i) => {\n\t\t\t\titem.classList.remove(this.hiddenClass);\n\n\t\t\t\t//add a class to last visible item in the list in case last item in list needs special styling\n\t\t\t\tif (this.lastClass && i === matchedItems.length - 1) {\n\t\t\t\t\titem.classList.add(this.lastClass);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.element.classList.remove('is-empty');\n\t\t} else {\n\t\t\tthis.element.classList.add('is-empty');\n\t\t}\n\n\t\tif (typeof this.filtersCallback === 'function') {\n\t\t\tthis.filtersCallback();\n\t\t}\n\t}\n\n\tupdateURL() {\n\t\tif (window.history && window.history.pushState)\t{\n\t\t\tlet state = {};\n\t\t\tstate.filters = Object.assign({}, this.filters);\n\n\t\t\tthis.filters.forEach((filter) => {\n\t\t\t\tif (filter.value !== undefined && filter.value.length !== 0 && filter.value !== filter.ignoreValue) {\n\t\t\t\t\tthis.url = utils.updateQueryStringParameter(this.url, filter.name, filter.value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.url = utils.removeURLParameter(this.url, filter.name);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thistory.pushState(state, document.title, this.url);\n\t\t}\n\t}\n}\n"],
  "mappings": "AAAO,SAASA,EAAgBC,EAAQ,CACvC,IAAIC,EAAW,mBAAmB,OAAO,SAAS,OAAO,UAAU,CAAC,CAAC,EACpEC,EAAgBD,EAAS,MAAM,GAAG,EAClCE,EACAC,EAED,IAAKA,EAAI,EAAGA,EAAIF,EAAc,OAAQE,IAGrC,GAFAD,EAAiBD,EAAcE,CAAC,EAAE,MAAM,GAAG,EAEvCD,EAAe,CAAC,IAAMH,EACzB,OAAOG,EAAe,CAAC,IAAM,OAAY,GAAOA,EAAe,CAAC,CAGnE,CAEO,SAASE,EAA2BC,EAAKC,EAAKC,EAAO,CAC3D,IAAIC,EAAK,IAAI,OAAO,SAAWF,EAAM,YAAa,GAAG,EACjDG,EAAYJ,EAAI,QAAQ,GAAG,IAAM,GAAK,IAAM,IAEhD,OAAIA,EAAI,MAAMG,CAAE,EACRH,EAAI,QAAQG,EAAI,KAAOF,EAAM,IAAMC,EAAQ,IAAI,EAE/CF,EAAMI,EAAYH,EAAM,IAAMC,CAEvC,CAEO,SAASG,EAAmBC,EAAKC,EAAW,CAE/C,IAAIC,EAAUF,EAAI,MAAM,GAAG,EAC3B,GAAIE,EAAS,QAAU,EAAG,CAKtB,QAJIC,EAAQ,mBAAmBF,CAAS,EAAE,IACtCG,EAAMF,EAAS,CAAC,EAAE,MAAM,OAAO,EAG1BV,EAAGY,EAAK,OAAQZ,KAAM,GAEvBY,EAAKZ,CAAC,EAAE,YAAYW,EAAQ,CAAC,IAAM,IACnCC,EAAK,OAAOZ,EAAG,CAAC,EAIxB,OAAAQ,EAAKE,EAAS,CAAC,GAAKE,EAAK,OAAS,EAAI,IAAMA,EAAK,KAAK,GAAG,EAAI,IACtDJ,CACX,KACI,QAAOA,CAEf,CChCA,IAAqBK,EAArB,KAAgC,CAC/B,YAAYC,EAAS,CACpB,KAAK,eAAkBA,EAAQ,iBAAmB,OAAa,GAAQA,EAAQ,eAC/E,KAAK,QAAUA,EAAQ,QACvB,KAAK,QAAU,CAAC,EAChB,KAAK,YAAc,KAAK,QAAQ,aAAa,mBAAmB,EAAE,MAAM,GAAG,EAC3E,KAAK,aAAeA,EAAQ,aAC5B,KAAK,gBAAkBA,EAAQ,gBAC/B,KAAK,IAAM,OAAO,SAAS,KAC3B,KAAK,UAAYA,EAAQ,WAAa,OACtC,KAAK,YAAcA,EAAQ,aAAe,SAC1C,KAAK,aAAeA,EAAQ,2BAA6B,sBACzD,KAAK,eAAiBA,EAAQ,eAE9B,KAAK,iBAAiB,EACtB,KAAK,kBAAkB,KAAK,WAAW,EACvC,KAAK,qBAAqB,EAC1B,KAAK,qBAAqB,EAEtB,OAAO,KAAK,cAAiB,YAChC,KAAK,aAAa,EAGnB,KAAK,aAAa,CACnB,CAEA,sBAAuB,CACtB,GAAI,KAAK,gBAAkB,OAAO,SAAW,OAAO,QAAQ,UAAW,CACtE,IAAIC,EAAQ,CAAC,EACbA,EAAM,QAAU,KAAK,QAAQ,MAAM,EACnC,QAAQ,aAAaA,EAAO,SAAS,MAAO,KAAK,GAAG,CACrD,CACD,CAEA,kBAAkBC,EAAa,CAC9BA,EAAY,QAASC,GAAe,CACnC,IAAMC,EAAc,KAAK,qBAAqBD,CAAU,EAClDE,EAAc,KAAK,eAAeF,CAAU,EAElD,KAAK,QAAQ,KAAK,CACjB,KAAMA,EACN,MAAOE,EACP,YAAaD,CACd,CAAC,CACF,CAAC,CACF,CAEA,qBAAqBD,EAAY,CAChC,IAAMG,EAAgB,SAAS,cAAc,UAAUH,CAAU,IAAI,EACjEC,EAEJ,OAAIE,EACCA,EAAc,UAAY,WAC7BF,EAAcE,EAAc,aAAa,aAAa,GAGvD,QAAQ,KAAK,uBAAyBH,EAAa,uBAAuB,EAGpEC,CACR,CAEA,eAAeD,EAAY,CAC1B,IAAMG,EAAgB,SAAS,cAAc,UAAUH,CAAU,IAAI,EACjEE,EAEJ,OAAIC,EACCA,EAAc,aAAa,MAAM,IAAM,WAC1CD,EAAcC,EAAc,QAAUA,EAAc,MAAQ,OAE5DD,EAAcC,EAAc,MAG7B,QAAQ,KAAK,uBAAyBH,EAAa,uBAAuB,EAGpEE,CACR,CAEA,sBAAuB,CACtB,KAAK,YAAY,QAASF,GAAe,CACxC,IAAMI,EAAiBC,EAAgBL,CAAU,EAE7CI,GACH,KAAK,cAAc,CAClB,KAAMJ,EACN,MAAOI,CACR,EAAG,EAAI,CAET,CAAC,CACF,CAEA,cAAcE,EAAeC,EAAc,CAC1C,IAAIC,EAAS,KAAK,QAAQ,KAAMA,GAAWA,EAAO,OAASF,EAAc,IAAI,EAEzEE,GAAUA,EAAO,QAAUF,EAAc,QAC5CE,EAAO,MAAQF,EAAc,MAC7B,KAAK,aAAa,EAEdC,GACH,KAAK,UAAU,CAACC,CAAM,CAAC,EAG1B,CAEA,kBAAmB,CAClB,KAAK,YAAY,QAASR,GAAe,CACxC,IAAMG,EAAgB,SAAS,cAAc,UAAYH,EAAa,IAAI,EAEtEG,GACHA,EAAc,iBAAiB,SAAU,IAAM,CAC9C,KAAK,cAAc,CAClB,KAAMH,EACN,MAAO,KAAK,eAAeA,CAAU,CACtC,CAAC,EAEG,KAAK,gBACR,KAAK,UAAU,CAEjB,CAAC,CAEH,CAAC,EAEG,KAAK,gBAAkB,OAAO,SAAW,OAAO,QAAQ,WAC3D,OAAO,iBAAiB,WAAa,GAAM,CAC1C,GAAI,EAAE,MAAM,QAAS,CACpB,QAASS,KAAQ,EAAE,MAAM,QACxB,KAAK,QAAQA,CAAI,EAAI,EAAE,MAAM,QAAQA,CAAI,EAG1C,KAAK,UAAU,EAAE,MAAM,OAAO,EAC9B,KAAK,aAAa,CACnB,CACD,CAAC,CAEH,CAEA,UAAUC,EAAc,CACvB,QAASC,KAAKD,EAAc,CAC3B,IAAIF,EAASE,EAAaC,CAAC,EACvBR,EAAgB,SAAS,cAAc,UAAUK,EAAO,IAAI,IAAI,EAEhEL,IACCA,EAAc,UAAY,WAC7BA,EAAc,MAAQK,EAAO,OAG1BL,EAAc,UAAY,SACzBA,EAAc,aAAa,MAAM,IAAM,aAC1CA,EAAc,QAAWA,EAAc,QAAUK,EAAO,OAI5D,CACD,CAGA,WAAWI,EAAS,CACnB,QAASC,KAAYD,EACpB,KAAK,QAAQ,QAAQ,SAASE,EAAM,CAC/BA,EAAK,OAASD,IACjBC,EAAK,MAAQF,EAAQC,CAAQ,EAE/B,CAAC,EAGF,KAAK,UAAU,KAAK,OAAO,EAC3B,KAAK,aAAa,EAEd,KAAK,gBACR,KAAK,UAAU,CAEjB,CAEA,cAAe,CACd,IAAIE,EAAe,CAAC,EAChBC,EACAC,EAAe,CAAC,EAEhB,KAAK,eACRD,EAAY,KAAK,QAAQ,iBAAiB,KAAK,cAAc,EAE7DA,EAAY,KAAK,QAAQ,SAI1B,QAASF,KAAQE,EACXF,EAAK,UAAU,SAAS,KAAK,YAAY,GAC7CG,EAAa,KAAKH,CAAI,EAIxB,GAAI,KAAK,UAAW,CACnB,IAAII,EAAqB,KAAK,QAAQ,cAAc,IAAI,KAAK,SAAS,EAAE,EACpEA,GACHA,EAAmB,UAAU,OAAO,KAAK,SAAS,CAEpD,CAIA,CAAC,GAAGD,CAAY,EAAE,QAASE,GAAY,CACtC,IAAIC,EAAU,GAEd,KAAK,QAAQ,QAAQ,SAASZ,EAAQ,CACrC,GAAIA,EAAO,QAAU,QAAaA,EAAO,QAAUA,EAAO,cAIrD,CAACW,EAAQ,aAAa,eAAiBX,EAAO,IAAI,GAAKW,EAAQ,aAAa,eAAiBX,EAAO,IAAI,IAAMA,EAAO,OACxH,OAAAY,EAAU,GACH,EAGV,CAAC,EAEGA,GACHL,EAAa,KAAKI,CAAO,CAE3B,CAAC,EAED,CAAC,GAAGF,CAAY,EAAE,QAASI,GAAO,CACjCA,EAAG,UAAU,IAAI,KAAK,WAAW,CAClC,CAAC,EAEGN,EAAa,SAAW,GAC3BA,EAAa,QAAQ,CAACD,EAAMH,IAAM,CACjCG,EAAK,UAAU,OAAO,KAAK,WAAW,EAGlC,KAAK,WAAaH,IAAMI,EAAa,OAAS,GACjDD,EAAK,UAAU,IAAI,KAAK,SAAS,CAEnC,CAAC,EAED,KAAK,QAAQ,UAAU,OAAO,UAAU,GAExC,KAAK,QAAQ,UAAU,IAAI,UAAU,EAGlC,OAAO,KAAK,iBAAoB,YACnC,KAAK,gBAAgB,CAEvB,CAEA,WAAY,CACX,GAAI,OAAO,SAAW,OAAO,QAAQ,UAAW,CAC/C,IAAIhB,EAAQ,CAAC,EACbA,EAAM,QAAU,OAAO,OAAO,CAAC,EAAG,KAAK,OAAO,EAE9C,KAAK,QAAQ,QAASU,GAAW,CAC5BA,EAAO,QAAU,QAAaA,EAAO,MAAM,SAAW,GAAKA,EAAO,QAAUA,EAAO,YACtF,KAAK,IAAYc,EAA2B,KAAK,IAAKd,EAAO,KAAMA,EAAO,KAAK,EAE/E,KAAK,IAAYe,EAAmB,KAAK,IAAKf,EAAO,IAAI,CAE3D,CAAC,EAED,QAAQ,UAAUV,EAAO,SAAS,MAAO,KAAK,GAAG,CAClD,CACD,CACD",
  "names": ["getUrlParameter", "sParam", "sPageURL", "sURLVariables", "sParameterName", "i", "updateQueryStringParameter", "uri", "key", "value", "re", "separator", "removeURLParameter", "url", "parameter", "urlparts", "prefix", "pars", "FilterList", "options", "state", "filterNames", "filterName", "ignoreValue", "filterValue", "filterElement", "newValue", "getUrlParameter", "updatedFilter", "triggerEvent", "filter", "prop", "filtersArray", "i", "filters", "property", "item", "matchedItems", "listItems", "newListItems", "lastVisibleElement", "element", "matched", "el", "updateQueryStringParameter", "removeURLParameter"]
}
